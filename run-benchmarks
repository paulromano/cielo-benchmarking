#!/bin/bash

#set -e

list=benchmark-list.txt
particles=1000
batches=300
inactive=50

if [[ $# -eq 1 ]]; then
    directory=$1
    xsxml=$(pwd)/${directory}/cross_sections_new.xml
else
    directory=$time
    xsxml=/opt/data/ace/nndc/cross_sections.xml
fi
mkdir -p $directory


time=$(date +"%Y-%m-%d-%H%M%S")

# Write progress bar
function progress {
    current=$1
    total=$2
    width=68
    percent=$(echo "$current*100/$total" | bc)
    bars=$(echo "$current*$width/$total" | bc)
    nobars=$(expr $width \- $bars \- 1)

    echo -ne "$(printf '%3i' $percent)% ["
    for j in $(seq 1 $bars); do echo -ne "="; done
    if [[ $nobars -gt 0 ]]; then echo -ne ">"; fi
    for j in $(seq 1 $nobars); do echo -ne "."; done
    echo -ne "]\r"
}

# Make sure runs are killed if script aborts
trap 'kill $(jobs -p) 2>/dev/null' EXIT

# Get copy of benchmarks repository
if [[ ! -d benchmarks ]]; then
    git clone https://github.com/mit-crpg/benchmarks.git
fi

# Prepare benchmarks
echo Modifying run parameters...
for benchmark in $(cat $list); do
    sed -i -r -e "s:(<particles>).*(</particles>):\1${particles}\2:g" \
        -e "s:(<inactive>).*(</inactive>):\1${inactive}\2:g" \
        -e "s:(<batches>).*(</batches>):\1${batches}\2:g" \
        benchmarks/${benchmark}/settings.xml
done

# Run benchmarks
num=$(cat $list | wc -l)
i=0
basedir=$PWD
echo "Running benchmarks..."
for benchmark in $(cat $list); do
    # Update progress bar
    progress $i $num
    i=$(expr $i \+ 1)

    # Run openmc
    cd benchmarks/${benchmark}
    output=output_$time
    CROSS_SECTIONS=${xsxml} openmc > $output 2>&1 &
    wait $!
    cd $basedir

    # Get k-effective
    keff=$(cat benchmarks/${benchmark}/$output | grep Combined | \
        sed -r -e 's_.*=(.*)\+/-.*_\1_g')
    stdev=$(cat benchmarks/${benchmark}/$output | grep Combined | \
        sed -r -e 's_.*\+/-(.*)_\1_g')
    echo $benchmark $keff $stdev >> ${directory}/results
done

# Display 100% on progress bar
progress $num $num
echo -ne "\n"

# Convert results to spreadsheet
echo Converting results to .xls...
python make-xls.py ${directory}/results
status=$?

# Create archive of outputs
echo Creating ${directory}/results_output.tar.gz
find . -name "output_${time}" | cut -c3- | xargs tar czf ${directory}/results_output.tar.gz
